# 
# Technoplatz BI
# 
# Copyright (C) 2020-2023 Technoplatz IT Solutions GmbH, Mustafa Mat
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see https://www.gnu.org/licenses.
# 
# If your software can interact with users remotely through a computer
# network, you should also make sure that it provides a way for users to
# get its source.  For example, if your program is a web application, its
# interface could display a "Source" link that leads users to an archive
# of the code.  There are many ways you could offer source, and different
# solutions will be better for different programs; see section 13 for the
# specific requirements.
# 
# You should also get your employer (if you work as a programmer) or school,
# if any, to sign a "copyright disclaimer" for the program, if necessary.
# For more information on this, and how to apply and follow the GNU AGPL, see
# https://www.gnu.org/licenses.
# 

name: Deploy replicaset image to Github Packages
on:
  push:
    branches:
      - dev0
      - main
    paths:
      - "_replicaset/**"
env:
  REPLICASET_IMAGE_NAME: bi-replicaset
  REPLICASET_FOLDER: _replicaset
  DOCKERFILE: Dockerfile
  VERSION: latest
jobs:
  push-to-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Variables
        id: vars
        shell: bash
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}"
          if [ ${{ github.event_name }} != "pull_request" ]; then echo "::set-output name=oref::$(echo ${GITHUB_REF#refs/heads/})"; else echo "::set-output name=oref::$(echo ${GITHUB_HEAD_REF})"; fi
      - name: Build replicaset image
        id: build-replicaset-image
        run: |
          IMAGE_NAME=$REPLICASET_IMAGE_NAME
          ref_=${{steps.vars.outputs.oref}}
          if [ $ref_ != "main" ]; then IMAGE_NAME=$IMAGE_NAME-$ref_; fi
          cd $REPLICASET_FOLDER
          docker build . --file $DOCKERFILE --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
          echo "::set-output name=oimagename::$(echo $IMAGE_NAME)"
      - name: Log in to Github registry
        run: |
          echo "${{ secrets.ACCESS_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push replicaset image
        id: push-replicaset-image
        run: |
          IMAGE_NAME=${{steps.build-replicaset-image.outputs.oimagename}}
          IMAGE_ID=ghcr.io/technoplatz/$IMAGE_NAME:$VERSION
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
      - name: Logout from Github
        run: |
          docker logout ghcr.io
